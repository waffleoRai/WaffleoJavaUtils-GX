/*-----------------------------------------------------
 * Autogenerated Java class from XML definition.
 * Created Wed, 1 Jan 2025 13:13:08 -0600
 *-----------------------------------------------------*/

package waffleoRai_Containers.maxis.ts3.savefmts.sim;

import java.util.Map;
import java.util.HashMap;

public class Reputation {
//Game Script: Sims3.Gameplay.Socializing.Reputation
//Enum type: s16

	public static final short None = (short)0x0000;
	public static final short Faithful = (short)0x0001;
	public static final short EternallyFaithful = (short)0x0002;
	public static final short Cheater = (short)0x0003;
	public static final short Dirtbag = (short)0x0004;
	public static final short Slimeball = (short)0x0005;
	public static final short Naughty = (short)0x0006;
	public static final short Manipulator = (short)0x0007;
	public static final short Casanova = (short)0x0008;
	public static final short ExploringTheirOptions = (short)0x0009;
	public static final short Player = (short)0x000A;
	public static final short DonJuan = (short)0x000B;

	public static final short[] ALL_VALUES = {
		(short)0x0000, (short)0x0001, (short)0x0002, (short)0x0003, (short)0x0004, (short)0x0005, (short)0x0006, (short)0x0007, 
		(short)0x0008, (short)0x0009, (short)0x000A, (short)0x000B
	};

	public static final String[] ALL_NAMES = {
		"None", "Faithful", "EternallyFaithful", "Cheater", 
		"Dirtbag", "Slimeball", "Naughty", "Manipulator", 
		"Casanova", "ExploringTheirOptions", "Player", "DonJuan"
	};

	private static Map<String, Short> nameMap;
	private static Map<Short, String> valMap;

	public static String stringFromValue(short value){
		if(valMap == null){
			valMap = new HashMap<Short, String>();
			for(int i = 0; i < ALL_VALUES.length; i++){
				valMap.put(ALL_VALUES[i], ALL_NAMES[i]);
			}
		}
		return valMap.get(value);
	}

	public static short valueFromString(String str){
		if(nameMap == null){
			nameMap = new HashMap<String, Short>();
			for(int i = 0; i < ALL_NAMES.length; i++){
				nameMap.put(ALL_NAMES[i], ALL_VALUES[i]);
			}
		}
		Short mappedVal = nameMap.get(str);
		if(mappedVal == null) return (short)-1;
		return mappedVal;
	}

	public static void disposeMaps(){
		if(nameMap != null){
			nameMap.clear();
			nameMap = null;
		}
		if(valMap != null){
			valMap.clear();
			valMap = null;
		}
	}
}
