/*-----------------------------------------------------
 * Autogenerated Java class from XML definition.
 * Created Wed, 1 Jan 2025 00:31:43 -0600
 *-----------------------------------------------------*/

package waffleoRai_Containers.maxis.ts3.savefmts.sim;

import java.util.Map;
import java.util.HashMap;

public class Zodiac {
//Game Script: 
//Enum type: u32

	public static final int Aries = 0x00000000;
	public static final int Taurus = 0x00000001;
	public static final int Gemini = 0x00000002;
	public static final int Cancer = 0x00000003;
	public static final int Leo = 0x00000004;
	public static final int Virgo = 0x00000005;
	public static final int Libra = 0x00000006;
	public static final int Scorpio = 0x00000007;
	public static final int Sagittarius = 0x00000008;
	public static final int Capricorn = 0x00000009;
	public static final int Aquarius = 0x0000000A;
	public static final int Pisces = 0x0000000B;
	public static final int Unset = 0x0000000C;

	public static final int[] ALL_VALUES = {
		0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007, 
		0x00000008, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
	};

	public static final String[] ALL_NAMES = {
		"Aries", "Taurus", "Gemini", "Cancer", 
		"Leo", "Virgo", "Libra", "Scorpio", 
		"Sagittarius", "Capricorn", "Aquarius", "Pisces", 
		"Unset"
	};

	private static Map<String, Integer> nameMap;
	private static Map<Integer, String> valMap;

	public static String stringFromValue(int value){
		if(valMap == null){
			valMap = new HashMap<Integer, String>();
			for(int i = 0; i < ALL_VALUES.length; i++){
				valMap.put(ALL_VALUES[i], ALL_NAMES[i]);
			}
		}
		return valMap.get(value);
	}

	public static int valueFromString(String str){
		if(nameMap == null){
			nameMap = new HashMap<String, Integer>();
			for(int i = 0; i < ALL_NAMES.length; i++){
				nameMap.put(ALL_NAMES[i], ALL_VALUES[i]);
			}
		}
		Integer mappedVal = nameMap.get(str);
		if(mappedVal == null) return -1;
		return mappedVal;
	}

	public static void disposeMaps(){
		if(nameMap != null){
			nameMap.clear();
			nameMap = null;
		}
		if(valMap != null){
			valMap.clear();
			valMap = null;
		}
	}
}
