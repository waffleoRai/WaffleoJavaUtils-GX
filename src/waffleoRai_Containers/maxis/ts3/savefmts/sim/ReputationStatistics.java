/*-----------------------------------------------------
 * Autogenerated Java class from XML definition.
 * Created Wed, 1 Jan 2025 13:12:59 -0600
 *-----------------------------------------------------*/

//Last check pass: 2025/01/01 20:06

package waffleoRai_Containers.maxis.ts3.savefmts.sim;

import java.io.IOException;
import java.io.Writer;
import org.w3c.dom.Element;

import waffleoRai_Containers.maxis.MaxisPropertyStream;
import waffleoRai_Containers.maxis.ts3.savefmts.TS3Saveable;
import waffleoRai_Utils.BufferReference;
import waffleoRai_Utils.FileBuffer;
import waffleoRai_Utils.StringUtils;

public class ReputationStatistics extends TS3Saveable{
//TS3 Script: Sims3.Gameplay.Socializing.ReputationStatistics

	public static final int PSID_MREPUTATION = 0x0AE91A95;
	public static final int PSID_MNUMBEROFROMANTICBETRAYALS = 0x0AE91A96;
	public static final int PSID_MLONGESTROMANCESIMDESCRIPTIONID = 0x0AE91A97;
	public static final int PSID_MLONGESTROMANCESIMDAYS = 0x0AE91A98;
	public static final int PSID_MNUMBEROFCHEATINGRELATIONSHIPS = 0x0AE91A99;

	private static final String XMLKEY_MREPUTATION = "Reputation";
	private static final String XMLKEY_MNUMBEROFROMANTICBETRAYALS = "NumberOfRomanticBetrayals";
	private static final String XMLKEY_MLONGESTROMANCESIMDESCRIPTIONID = "LongestRomanceSimDescriptionId";
	private static final String XMLKEY_MLONGESTROMANCESIMDAYS = "LongestRomanceSimDays";
	private static final String XMLKEY_MNUMBEROFCHEATINGRELATIONSHIPS = "NumberOfCheatingRelationships";

	public short mReputation;
	public int mNumberOfRomanticBetrayals;
	public long mLongestRomanceSimDescriptionId;
	public float mLongestRomanceSimDays;
	public int mNumberOfCheatingRelationships;

	public ReputationStatistics() {
		xmlNodeName = "ReputationStatistics";
		baseSize = 22;
	}
	

	/*----- Read -----*/
	
	protected boolean readBinary_internal(BufferReference dat) {
		if(dat == null) return false;
		
		mReputation = dat.nextShort();
		mNumberOfRomanticBetrayals = dat.nextInt();
		mLongestRomanceSimDescriptionId = dat.nextLong();
		mLongestRomanceSimDays = Float.intBitsToFloat(dat.nextInt());
		mNumberOfCheatingRelationships = dat.nextInt();

		return true;
	}
	
	protected boolean readXMLNode_internal(Element xml_element) {
		if(xml_element == null) return false;
		String nn = xml_element.getNodeName();
		if(nn == null) return false;
		if(!nn.equals(xmlNodeName)) return false;
		
		String aval = null;
		aval = xml_element.getAttribute(XMLKEY_MREPUTATION);
		if(aval != null) mReputation = Reputation.valueFromString(aval);
		aval = xml_element.getAttribute(XMLKEY_MNUMBEROFROMANTICBETRAYALS);
		if(aval != null) mNumberOfRomanticBetrayals = StringUtils.parseSignedInt(aval);
		aval = xml_element.getAttribute(XMLKEY_MLONGESTROMANCESIMDESCRIPTIONID);
		if(aval != null) mLongestRomanceSimDescriptionId = StringUtils.parseUnsignedLong(aval);
		aval = xml_element.getAttribute(XMLKEY_MLONGESTROMANCESIMDAYS);
		if(aval != null) mLongestRomanceSimDays = (float)Double.parseDouble(aval);
		aval = xml_element.getAttribute(XMLKEY_MNUMBEROFCHEATINGRELATIONSHIPS);
		if(aval != null) mNumberOfCheatingRelationships = StringUtils.parseSignedInt(aval);

		return true;
	}
	
	protected boolean readPropertyStream_internal(MaxisPropertyStream stream) {
		if(stream == null) return false;
		
		mReputation = stream.getFieldAsShort(PSID_MREPUTATION);
		mNumberOfRomanticBetrayals = stream.getFieldAsInt(PSID_MNUMBEROFROMANTICBETRAYALS);
		mLongestRomanceSimDescriptionId = stream.getFieldAsLong(PSID_MLONGESTROMANCESIMDESCRIPTIONID);
		mLongestRomanceSimDays = stream.getFieldAsFloat(PSID_MLONGESTROMANCESIMDAYS);
		mNumberOfCheatingRelationships = stream.getFieldAsInt(PSID_MNUMBEROFCHEATINGRELATIONSHIPS);

		return true;
	}
	
	public static ReputationStatistics readBinary(BufferReference dat) {
		if(dat == null) return null;
		ReputationStatistics str = new ReputationStatistics();
		if(!str.readBinary_internal(dat)) return null;
		return str;
	}
	
	public static ReputationStatistics readXMLNode(Element xml_element) {
		if(xml_element == null) return null;
		ReputationStatistics str = new ReputationStatistics();
		if(!str.readXMLNode_internal(xml_element)) return null;
		return str;
	}
	
	public static ReputationStatistics readPropertyStream(BufferReference dat, boolean byteOrder, int verFieldSize) {
		if(dat == null) return null;
		MaxisPropertyStream stream = MaxisPropertyStream.openForRead(dat, byteOrder, verFieldSize);
		return readPropertyStream(stream);
	}
	
	public static ReputationStatistics readPropertyStream(MaxisPropertyStream stream) {
		if(stream == null) return null;
		ReputationStatistics str = new ReputationStatistics();
		if(!str.readPropertyStream_internal(stream));
		return str;
	}
	
	/*----- Write -----*/
	
	public int getBinarySize() {
		int size = baseSize;
		return size;
	}
	
	public FileBuffer writeBinary(boolean byteOrder) {
		FileBuffer buff = new FileBuffer(getBinarySize(), byteOrder);
		writeBinaryTo(buff);
		return buff;
	}
	
	public int writeBinaryTo(FileBuffer target) {
		if(target == null) return 0;
		long stPos = target.getFileSize();
		
		target.addToFile(mReputation);
		target.addToFile(mNumberOfRomanticBetrayals);
		target.addToFile(mLongestRomanceSimDescriptionId);
		target.addToFile(Float.floatToRawIntBits(mLongestRomanceSimDays));
		target.addToFile(mNumberOfCheatingRelationships);

		return (int)(target.getFileSize() - stPos);
	}

	public void writeXMLNode(Writer out, String indent) throws IOException {
		writeXMLNode(out, indent, null);
	}
	
	public void writeXMLNode(Writer out, String indent, String varName) throws IOException {
		if(out == null) return;
		if(indent == null) indent = "";
		
		out.write(indent);
		out.write(String.format("<%s", xmlNodeName));
		if(varName != null){
			out.write(String.format(" VarName=\"%s\"", varName));
		}
		out.write(String.format(" %s=\"%s\"", XMLKEY_MREPUTATION, Reputation.stringFromValue(mReputation)));
		out.write(String.format(" %s=\"%d\"", XMLKEY_MNUMBEROFROMANTICBETRAYALS, mNumberOfRomanticBetrayals));
		out.write(String.format(" %s=\"0x%016x\"", XMLKEY_MLONGESTROMANCESIMDESCRIPTIONID, mLongestRomanceSimDescriptionId));
		out.write(String.format(" %s=\"%.3f\"", XMLKEY_MLONGESTROMANCESIMDAYS, mLongestRomanceSimDays));
		out.write(String.format(" %s=\"%d\"", XMLKEY_MNUMBEROFCHEATINGRELATIONSHIPS, mNumberOfCheatingRelationships));
		out.write("/>\n");

	}

	public void addToPropertyStream(MaxisPropertyStream ps) {	
		if(ps == null) return;
		ps.addShort(mReputation, PSID_MREPUTATION);
		ps.addInt(mNumberOfRomanticBetrayals, PSID_MNUMBEROFROMANTICBETRAYALS);
		ps.addLong(mLongestRomanceSimDescriptionId, PSID_MLONGESTROMANCESIMDESCRIPTIONID);
		ps.addFloat(mLongestRomanceSimDays, PSID_MLONGESTROMANCESIMDAYS);
		ps.addInt(mNumberOfCheatingRelationships, PSID_MNUMBEROFCHEATINGRELATIONSHIPS);
	}
	
}
